Diary 페이지
: 특정 일기를 상세 조회

- /diary/1 형식의 URL 파라미터로 일기 id를 받아, 해당 일기를 페이지에 렌더링
- 2개의 섹션으로 구성
1) 헤더(Header): 일기 날짜 표시와 <뒤로 가기>, <수정하기> 버튼 기능
2) 뷰어(Viewer): 감정 이미지와 오늘의 일기 표시

- 이번 절에서는 먼저 URL 파라미터로 id를 받아 일기 데이터를 불러오는 기능을 구현
- 헤더와 뷰어 섹션을 차례대로 구현

1. 커스텀 훅으로 일기 데이터 불러오기
커스텀 훅: useState나 useEffect와 같은 훅을 프로그래머가 직접 만들어 사용하는 것
- URL 파라미터로 일기 데이터를 불러오는 기능은 여러 컴포넌트에서 사용하므로 공통 기능. But Home 페이지로 되돌려 보내는 페이지 이동 기능을 구현하기 위해서는 useNavigate와 같은 리액트 훅을 이용해야 함.
- 리액트 훅은 컴포넌트를 위해 제공되는 기능이라 일반 함수에서 호출시 오류가 발생

1) src 아래에 훅을 보관할 hooks 폴더를 생성하고 useDiary.js를 생성
- 커스텀 훅 역시 자바스크립트 함수로 만든다. 이 때 함수 이름은 훅이라는 것을 명시하기 위해 'use'접두사를 꼭 붙여야 한다.

2) 일기 데이터를 불러오는 기능 구현
- useContext를 통해 전체 일기 데이터 불러옴
- useDiary도 훅이므로 useContext와 같은 리액트 훅을 자유롭게 불러올 수 있음.

3) useDiary가 DiaryStateContext에서 일기 데이터를 잘 공급 받는지 확인
- Diary 컴포넌트에서 useDiary를 불러와 호출
- 개발자 도구 - [Component] - Diary = hooks - Diaty - Context

3) useDiary.js에서 매개변수로 저장한 id와 일치하는 일기 데이터를 반환

4) 만약 URL 파라미터로 전달한 id와 일치하는 일기가 없으면 Home 페이지로 되돌려 보내는 기능


2. 로딩 상태를 설정하여 오류 방지
Diary 컴포넌트에서 useDiary를 호출해 일기 데이터를 불러오는 과정
[1] Diary 컴포넌트 마운트
useDiary 호출, State 변수 diary 생성 - diary 생성시 useState 인수 전달 X - diary == undefined

[2] useDiary의 useEffect 콜백 함수 실행
콜백 함수는 useDiary가 매개변수로 저장한 id와 일치하는 일기데이터로 diary 업데이트 -> useDiary 반환값이 일기 데이터로 업데이트

[3] Diary 컴포넌트 업데이트
커스텀 훅에서 State 업데이트가 일어나면 해당 커스텀 훅을 호출한 컴포넌트도 리렌더

useDiary의 반환 데이터(data)는 처음에는 undefined 값이었다가 시간이 지난 다음 일기 데이터로 업데이트

useDiary의 일기 데이터가 undefined일 때 배열에 접근하면 오류 발생
: Diary 컴포넌트에서 useDiary 가 일기 데이터를 불러오기 전까지는 헤더나 뷰어 섹션을 렌더링 하면 안된다.


3. 헤더 구현하기
- 일기 작성 날짜가 정중앙에 제목으로 배치
- 왼쪽에는 <뒤로 가기>버튼. 오른쪽에는 <수정하기> 버튼

1) 공통 컴포넌트 Header를 이용

2) <뒤로가기>, <수정하기> 버튼의 이벤트 핸들러 생성


4. 뷰어 구현
: Diary 페이지에서 선택한 일기의 상세 정보를 보여줌
- 두 개의 섹션으로 나뉜다.
[1] emotion_section : 감정 이미지를 보여줌
[2] content_section : 일기 정보를 보여줌

1) 뷰어 섹션을 별도의 스타일 설정이 필요하기 때문에 View 컴포넌트 생성

2) Diary에서 Viewer 컴포넌트를 배치하고 Props로 필요한 데이터 전달